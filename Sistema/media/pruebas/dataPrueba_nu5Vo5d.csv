Test Name,code
test_addition,"def test_addition(): assert 2 + 2 == 4"
test_failure,"def test_failure(): assert 1 == 0"
test_subtraction,"def test_subtraction(): assert 5 - 3 == 2"
test_multiplication,"def test_multiplication(): assert 3 * 3 == 9"
test_division,"def test_division(): assert 10 / 2 == 5"
test_zero_division,"def test_zero_division(): assert 1 / 0 == 0"
test_uppercase,"def test_uppercase(): assert 'abc'.upper() == 'ABC'"
test_isupper_true,"def test_isupper_true(): assert 'ABC'.isupper()"
test_isupper_false,"def test_isupper_false(): assert 'abc'.isupper()"
test_split,"def test_split(): assert 'a b c'.split() == ['a', 'b', 'c']"
test_list_append,"def test_list_append(): l = []; l.append(1); assert l == [1]"
test_dict_access,"def test_dict_access(): d = {'a': 1}; assert d['a'] == 1"
test_dict_missing,"def test_dict_missing(): d = {}; assert d['x'] == 1"
test_range,"def test_range(): assert list(range(3)) == [0, 1, 2]"
test_len,"def test_len(): assert len([1,2,3]) == 3"
test_fail_len,"def test_fail_len(): assert len([1,2]) == 3"
test_true,"def test_true(): assert True"
test_false,"def test_false(): assert False"
test_string_equality,"def test_string_equality(): assert 'hello' == 'hello'"
test_string_inequality,"def test_string_inequality(): assert 'hello' == 'world'"
test_in_operator,"def test_in_operator(): assert 3 in [1,2,3]"
test_not_in_operator,"def test_not_in_operator(): assert 4 not in [1,2,3]"
test_set_equality,"def test_set_equality(): assert set([1,2,2]) == set([2,1])"
test_fail_set_equality,"def test_fail_set_equality(): assert set([1,2]) == set([1,2,3])"
test_int_conversion,"def test_int_conversion(): assert int('10') == 10"
test_float_conversion,"def test_float_conversion(): assert float('3.14') == 3.14"
test_str_conversion,"def test_str_conversion(): assert str(123) == '123'"
test_index_error,"def test_index_error(): l = []; l[0]"
test_key_error,"def test_key_error(): d = {}; d['missing']"
test_type_error,"def test_type_error(): assert '1' + 1 == 2"
